<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
	Mapping file autogenerated by MyEclipse - Hibernate Tools
-->
<hibernate-mapping>
	<class name="co.com.coomeva.sipas.core.model.sipasdb.Climae"
		table="CLIMAE" lazy="false" optimistic-lock="none">
		<subselect>
			SELECT  NITCLI, NUMINT, TIPDOC, 
					DB2UTIL.GET_CODNOM_CLITAB(20,TIPDOC) DESTIPDOC, NOMCLI,
					NOMCL1, FECCON, DB2UTIL.GET_FECHA_ISO(FECCON) FECNAC, FECING,
					DB2UTIL.GET_FECHA_ISO(FECING) FECINGRESO, EDAASO EDADING,
					DB2UTIL.f_get_age(FECCON) EDADACT, ASOCOD, ESTASO, 
					DB2UTIL.GET_CODNOM_CLITAB(110,ESTASO) DESESTADO, CLAVIN,
					DB2UTIL.GET_CODNOM_CLITAB(44,CLAVIN) TIPOVIN, ASOCIA 
			FROM    MULCLIDAT.CLIMAE 
			WHERE   ASOCIA = 1
		</subselect>
		<id name="nitCli" type="java.lang.Long">
			<column name="NITCLI" length="17" />
			<generator class="assigned" />
		</id>
		<property name="numInt" type="java.lang.Long">
			<column name="NUMINT" precision="17" scale="0" />
		</property>
		<property name="tipDoc" type="java.lang.Long">
			<column name="TIPDOC" length="2" />
		</property>
		<property name="desTipDoc" type="java.lang.String">
			<column name="DESTIPDOC" length="60" />
		</property>
		<property name="nomCli" type="java.lang.String">
			<column name="NOMCLI" length="60" />
		</property>
		<property name="nomCl1" type="java.lang.String">
			<column name="NOMCL1" length="60" />
		</property>
		<property name="fecCon" type="java.lang.Long">
			<column name="FECCON" precision="8" scale="0" />
		</property>
		<property name="fecNac" type="java.lang.String">
			<column name="FECNAC" length="12" />
		</property>
		<property name="fecIng" type="java.lang.Long">
			<column name="FECING" precision="8" scale="0" />
		</property>
		<property name="fecIngreso" type="java.lang.String">
			<column name="FECINGRESO" length="12" />
		</property>
		<property name="edadIng" type="java.lang.Long">
			<column name="EDADING" precision="3" scale="0" />
		</property>
		<property name="edadAct" type="java.lang.Long">
			<column name="EDADACT" precision="3" scale="0" />
		</property>
		<property name="asoCod" type="java.lang.String">
			<column name="ASOCOD" length="50" not-null="true" />
		</property>
		<property name="estAso" type="java.lang.Long">
			<column name="ESTASO" precision="2" scale="0" />
		</property>
		<property name="desEstado" type="java.lang.String">
			<column name="DESESTADO" length="100" />
		</property>
		<property name="claVin" type="java.lang.Long">
			<column name="CLAVIN" precision="2" scale="0" />
		</property>
		<property name="tipoVin" type="java.lang.String">
			<column name="TIPOVIN" length="100" />
		</property>
		<property name="asoCia" type="java.lang.Long">
			<column name="ASOCIA" precision="2" scale="0"  />
		</property>
	</class>
	
	<!--  
		#######################################################
		## 1. Obtiene Datos detallados del Asociado
		#######################################################
	-->

	<sql-query name="GET_CLIMAE_DETALLE_ASOCIADO">
		<return-scalar column="numInt" type="java.lang.Long" />
		<return-scalar column="nitCli" type="java.lang.Long" />
		<return-scalar column="tipDoc" type="java.lang.Long" />
		<return-scalar column="desTipDoc" type="java.lang.String" />
		<return-scalar column="nomCli" type="java.lang.String" />
		<return-scalar column="nomCl1" type="java.lang.String" />
		<return-scalar column="idOficina" type="java.lang.Long" />
		<return-scalar column="desOficina" type="java.lang.String" />
		<return-scalar column="fecCon" type="java.lang.Long" />
		<return-scalar column="fecNac" type="java.lang.String" />
		<return-scalar column="fecIng" type="java.lang.Long" />
		<return-scalar column="fecIngreso" type="java.lang.String" />
		<return-scalar column="edadIng" type="java.lang.Long" />
		<return-scalar column="edadAct" type="java.lang.Long" />
		<return-scalar column="asoCod" type="java.lang.String" />
		<return-scalar column="codSex" type="java.lang.Long" />
		<return-scalar column="sexo" type="java.lang.String" />
		<return-scalar column="ciuNac" type="java.lang.Long" />
		<return-scalar column="desCiuNac" type="java.lang.String" />
		<return-scalar column="ciuExp" type="java.lang.Long" />
		<return-scalar column="desCiuExp" type="java.lang.String" />
		<return-scalar column="estAso" type="java.lang.Long" />
		<return-scalar column="desEstado" type="java.lang.String" />
		<return-scalar column="claVin" type="java.lang.Long" />
		<return-scalar column="tipoVin" type="java.lang.String" />
		<return-scalar column="indInd" type="java.lang.Long" />
		<return-scalar column="estCiv" type="java.lang.Long" />
		<return-scalar column="estCivil" type="java.lang.String" />
		<return-scalar column="profesion" type="java.lang.String" />
		<return-scalar column="asoCor" type="java.lang.Long" />
		<return-scalar column="desCorte" type="java.lang.String" />
		<return-scalar column="dirCor" type="java.lang.String" />
		<return-scalar column="dirRes" type="java.lang.String" />
		<return-scalar column="dirCom" type="java.lang.String" />
		<return-scalar column="dirFam" type="java.lang.String" />
		<return-scalar column="telRes" type="java.lang.String" />
		<return-scalar column="telCom" type="java.lang.String" />
		<return-scalar column="telFam" type="java.lang.String" />
		<return-scalar column="cel" type="java.lang.String" />
		<return-scalar column="mail" type="java.lang.String" />
		<return-scalar column="ciuRes" type="java.lang.String" />
		<return-scalar column="ciuCom" type="java.lang.String" />
		<return-scalar column="ciuFam" type="java.lang.String" />
		<return-scalar column="barRes" type="java.lang.String" />
		<return-scalar column="barCom" type="java.lang.String" />
		<return-scalar column="barFam" type="java.lang.String" />
		<return-scalar column="repLeg" type="java.lang.Long" />
		<return-scalar column="nomRep" type="java.lang.String" />
		<return-scalar column="codCiuRe" type="java.lang.Long" />
		<return-scalar column="codCiuCo" type="java.lang.Long" />
		<return-scalar column="codCiuFa" type="java.lang.Long" />
		<return-scalar column="fecEst" type="java.lang.Long" />
		<return-scalar column="fecEstado" type="java.lang.String" />
		<return-scalar column="tipUbiDirCor" type="java.lang.String" />
		<return-scalar column="regionalAso" type="java.lang.String" />
		<return-scalar column="zonaAso" type="java.lang.String" />
		<return-scalar column="extCom" type="java.lang.String" />
		<return-scalar column="aA" type="java.lang.String" />
		<return-scalar column="codCiuAA" type="java.lang.Long" />
		<return-scalar column="ciuAA" type="java.lang.String" />
		<return-scalar column="ciuNe" type="java.lang.String" />
		<return-scalar column="codCiuNe" type="java.lang.Long" />
		<return-scalar column="dirNe" type="java.lang.String" />
		<return-scalar column="barNe" type="java.lang.String" />
		
		<![CDATA[
					
		SELECT  numInt, nitCli, tipDoc,
				db2util.get_codnom_clitab(20, tipDoc) desTipDoc, nomCli,
				nomCl1, agcVin idOficina,
				trim(db2util.get_agc_vinculacion(agcVin)) desOficina,
				fecCon, db2util.get_fecha_iso(fecCon) fecNac, fecIng,
				db2util.get_fecha_iso(fecIng) fecIngreso, 
				int((fecing-feccon)/10000) edadIng,
				db2util.f_get_age(fecCon) edadAct, asoCod, codSex,
				db2util.get_codnom_clitab(42, codSex) sexo, lugCon ciuNac,
				db2util.get_cliciudad(lugCon) desCiuNac, lugExp ciuExp,
				db2util.get_cliciudad(lugExp) desCiuExp, estAso,
				db2util.get_codnom_clitab(110, estAso) desEstado, claVin,
				db2util.get_codnom_clitab(44, claVin) tipoVin, indInd,
				estCiv, db2util.get_codnom_clitab(43, estCiv) estCivil,
				DB2UTIL.SIP_PROFESION(numint,'AS') profesion, asoCor,
				db2util.get_codnom_clitab(618, asoCor) desCorte,
				DB2UTIL.SIP_DIRCORR(numint) dirCor,
				DB2UTIL.SIP_DIR(numint,char('RE')) dirRes,
				DB2UTIL.SIP_DIR(numint,char('CO')) dirCom,
				DB2UTIL.SIP_DIR(numint,char('FA')) dirFam,
				DB2UTIL.SIP_DIR(numint,char('TEL1')) telRes,
				DB2UTIL.SIP_DIR(numint,char('TEL2')) telCom,
				DB2UTIL.SIP_DIR(numint,char('TEL3')) telFam,
				DB2UTIL.SIP_DIR(numint,char('CEL')) cel,
				DB2UTIL.SIP_DIR(numint,char('DIN')) mail,
				DB2UTIL.SIP_CIUDAD(numint,char('RE')) ciuRes,
				DB2UTIL.SIP_CIUDAD(numint,char('CO')) ciuCom,
				DB2UTIL.SIP_CIUDAD(numint,char('FA')) ciuFam,
				DB2UTIL.SIP_BARRIO(numint,char('RE')) barRes,
				DB2UTIL.SIP_BARRIO(numint,char('CO')) barCom,
				DB2UTIL.SIP_BARRIO(numint,char('FA')) barFam, 
				repLeg, nomRep, 
				DB2UTIL.SIP_COD_CIUDAD(numint,char('RE')) codCiuRe, 
				DB2UTIL.SIP_COD_CIUDAD(numint,char('CO')) codCiuCo, 
				DB2UTIL.SIP_COD_CIUDAD(numint,char('FA')) codCiuFa,
				fecEst, db2util.get_fecha_iso(fecEst) fecEstado,
				DB2UTIL.SIP_DIRCORR_TIPUBI(numint) tipUbiDirCor,
				DB2UTIL.SIP_OBTENERREGIONAL_ASOCIADO(AGCVIN) regionalAso,
				DB2UTIL.SIP_OBTENERZONA_ASOCIADO(AGCVIN) zonaAso,
				DB2UTIL.SIP_DIR(numint,char('EXT')) extCom,
				DB2UTIL.SIP_DIR(numint,char('AA')) aA,
				DB2UTIL.SIP_COD_CIUDAD(numint,char('AA')) codCiuAA,
				DB2UTIL.SIP_CIUDAD(numint,char('AA')) ciuAA,
				DB2UTIL.SIP_CIUDAD(numint,char('NEG')) ciuNE,
				DB2UTIL.SIP_COD_CIUDAD(numint,char('NEG')) codCiuNe,
				DB2UTIL.SIP_DIR(numint,char('NEG')) dirNE,
				DB2UTIL.SIP_BARRIO(numint,char('NEG')) barNe
		FROM    mulclidat.climae
		WHERE   asoCia = :asocia 
				and numInt = :numint						
		]]>
	</sql-query>
	
</hibernate-mapping>
